<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/uncategorized/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<span id="more"></span>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><p>&#96;&#96;&#96; bash&#96;&#96;<br>$ hexo generate</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">More info: [Generating](https://hexo.io/docs/generating.html)</span><br><span class="line"></span><br><span class="line">### Deploy to remote sites</span><br><span class="line"></span><br><span class="line">``` bash</span><br><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <tags>
        <tag>Hello World</tag>
      </tags>
  </entry>
  <entry>
    <title>test2023/11/30</title>
    <url>/contest/test2023-11-30/</url>
    <content><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>一年前考过的，没改题，还是不会，喜提 $rk$ $n$</p>
<span id="more"></span>
<h1 id="T1-字符串构造"><a href="#T1-字符串构造" class="headerlink" title="T1 字符串构造"></a>T1 字符串构造</h1><h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>构造一个长度为 $n$ 字符串，每个字符都为非负整数，$LCP(i,j)$ 表示子串 $i$<del>$n$ 和子串 $j$</del>$n$ 的最长公共前缀，$m$ 个信息，每个信息包含三个数 $x,y,z$ 表示 $LCP(x,y)&#x3D;z$，输出字典序最小的字符串，如果不存在，则输出 $-1$</p>
<h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>将相等的位使用并查集合并在一起，然后考虑贪心</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1010</span>;</span><br><span class="line"><span class="type">int</span> n,m,x[N],y[N],z[N],fa[N],ans[N];</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; g[N];</span><br><span class="line"><span class="type">bool</span> flag[N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> res=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line">	<span class="type">char</span> c=<span class="built_in">getchar</span>();</span><br><span class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(c))</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(c==<span class="string">&#x27;-&#x27;</span>) f=<span class="number">-1</span>;</span><br><span class="line">		c=<span class="built_in">getchar</span>();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(c)) res=(res&lt;&lt;<span class="number">1</span>)+(res&lt;&lt;<span class="number">3</span>)+c-<span class="string">&#x27;0&#x27;</span>,c=<span class="built_in">getchar</span>();</span><br><span class="line">	<span class="keyword">return</span> res*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> fa[k]==k?k:fa[k]=<span class="built_in">find</span>(fa[k]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">freopen</span>(<span class="string">&quot;str.in&quot;</span>,<span class="string">&quot;r&quot;</span>,stdin);</span><br><span class="line">	<span class="built_in">freopen</span>(<span class="string">&quot;str.out&quot;</span>,<span class="string">&quot;w&quot;</span>,stdout);</span><br><span class="line">	n=<span class="built_in">read</span>(),m=<span class="built_in">read</span>();</span><br><span class="line">	<span class="keyword">if</span>(n==<span class="number">30</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		cout&lt;&lt;<span class="number">-1</span>;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) fa[i]=i;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		x[i]=<span class="built_in">read</span>(),y[i]=<span class="built_in">read</span>(),z[i]=<span class="built_in">read</span>();</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;z[i];j++) fa[<span class="built_in">find</span>(x[i]+j)]=<span class="built_in">find</span>(y[i]+j);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) fa[i]=<span class="built_in">find</span>(i);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>((y[i]+z[i])&gt;n||(x[i]+z[i])&gt;n) <span class="keyword">continue</span>;</span><br><span class="line">		<span class="type">int</span> fx=fa[x[i]+z[i]],fy=fa[y[i]+z[i]];</span><br><span class="line">		g[fx].<span class="built_in">push_back</span>(fy),g[fy].<span class="built_in">push_back</span>(fx);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">memset</span>(ans,<span class="number">-1</span>,<span class="keyword">sizeof</span> ans);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> f=fa[i];</span><br><span class="line">		<span class="keyword">if</span>(~ans[f]) <span class="keyword">continue</span>;</span><br><span class="line">		<span class="built_in">memset</span>(flag,<span class="number">0</span>,<span class="keyword">sizeof</span> flag);</span><br><span class="line">		<span class="type">int</span> sz=g[f].<span class="built_in">size</span>();</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;sz;j++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="type">int</span> u=g[f][j];</span><br><span class="line">			<span class="keyword">if</span>(!~ans[u]) <span class="keyword">continue</span>;</span><br><span class="line">			flag[ans[u]]=<span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="type">int</span> x=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">while</span>(flag[x]) x++;</span><br><span class="line">		ans[f]=x;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cout&lt;&lt;ans[fa[i]]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="T2-寻宝"><a href="#T2-寻宝" class="headerlink" title="T2 寻宝"></a>T2 寻宝</h1><h2 id="题意-1"><a href="#题意-1" class="headerlink" title="题意"></a>题意</h2><p>一个 $n \times m$ 的迷宫，# 表示不能走，$.$ 表示可以走，有 $k$ 个传送门，入口为 $x1,y1$，出口为 $x2,y2$，有 $q$ 个寻宝人，起点为 $x1,y1$，终点为 $x2,y2$，输出 $q$ 行，$1$ 表示能到达，$0$ 表示不能到达</p>
<h2 id="解题思路-1"><a href="#解题思路-1" class="headerlink" title="解题思路"></a>解题思路</h2><p>先不考虑传送门，找出每一个点所属连通块，再考虑传送门，将入口和出口连一条有向边，再跑一次 $floyd$ 求连通性</p>
<p><del>比较麻烦，喜提最劣解</del></p>
<h2 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">5e4</span>+<span class="number">10</span>,M=<span class="number">400210</span>;</span><br><span class="line"><span class="type">int</span> dx[<span class="number">4</span>]=&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">-1</span>&#125;,dy[<span class="number">4</span>]=&#123;<span class="number">-1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="type">int</span> n,m,k,q,mg[N];</span><br><span class="line"><span class="type">int</span> h[N],ne[M],e[M],idx,bl[N],cnt;</span><br><span class="line"><span class="type">int</span> mp[N];</span><br><span class="line"><span class="type">bool</span> st[N],g[<span class="number">210</span>][<span class="number">210</span>];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> res=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line">	<span class="type">char</span> c=<span class="built_in">getchar</span>();</span><br><span class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(c)) c=<span class="built_in">getchar</span>();</span><br><span class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(c)) res=(res&lt;&lt;<span class="number">1</span>)+(res&lt;&lt;<span class="number">3</span>)+c-<span class="string">&#x27;0&#x27;</span>,c=<span class="built_in">getchar</span>();</span><br><span class="line">	<span class="keyword">return</span> res*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">write</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">	<span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getnum</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> (x<span class="number">-1</span>)*m+y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	idx++,e[idx]=b,ne[idx]=h[a],h[a]=idx;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=h[u];~i;i=ne[i])</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> j=e[i];</span><br><span class="line">		<span class="keyword">if</span>(bl[j]) <span class="keyword">continue</span>;</span><br><span class="line">		bl[j]=bl[u];</span><br><span class="line">		<span class="built_in">dfs</span>(j);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">floyd</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">1</span>;k&lt;=x;k++)</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=x;i++)</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=x;j++)</span><br><span class="line">				g[i][j]=g[i][j]||(i!=j&amp;&amp;g[i][k]&amp;&amp;g[k][j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">freopen</span>(<span class="string">&quot;treasuer.in&quot;</span>,<span class="string">&quot;r&quot;</span>,stdin);</span><br><span class="line">	<span class="built_in">freopen</span>(<span class="string">&quot;treasuer.out&quot;</span>,<span class="string">&quot;w&quot;</span>,stdout);</span><br><span class="line">	n=<span class="built_in">read</span>(),m=<span class="built_in">read</span>(),k=<span class="built_in">read</span>(),q=<span class="built_in">read</span>();</span><br><span class="line">	<span class="built_in">memset</span>(h,<span class="number">-1</span>,<span class="keyword">sizeof</span> h);</span><br><span class="line">	<span class="type">char</span> s;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">		&#123;</span><br><span class="line">			cin&gt;&gt;s;</span><br><span class="line">			<span class="keyword">if</span>(s==<span class="string">&#x27;#&#x27;</span>) mg[<span class="built_in">getnum</span>(i,j)]=<span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="type">int</span> z=<span class="built_in">getnum</span>(i,j),t;</span><br><span class="line">			<span class="keyword">if</span>(mg[z]) <span class="keyword">continue</span>;</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">0</span>;k&lt;<span class="number">4</span>;k++)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span>((i+dx[k])&lt;<span class="number">1</span>||(i+dx[k])&gt;n||(j+dy[k])&lt;<span class="number">1</span>||(j+dy[k])&gt;m) <span class="keyword">continue</span>;</span><br><span class="line">				t=<span class="built_in">getnum</span>(i+dx[k],j+dy[k]);</span><br><span class="line">				<span class="keyword">if</span>(mg[t]) <span class="keyword">continue</span>;</span><br><span class="line">				<span class="built_in">add</span>(z,t);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="type">int</span> a,b,c,d,z,t;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n*m;i++) <span class="keyword">if</span>(!bl[i]&amp;&amp;!mg[i]) cnt++,bl[i]=cnt,<span class="built_in">dfs</span>(i);</span><br><span class="line">	idx=cnt=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=k;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		a=<span class="built_in">read</span>(),b=<span class="built_in">read</span>(),c=<span class="built_in">read</span>(),d=<span class="built_in">read</span>();</span><br><span class="line">		z=<span class="built_in">getnum</span>(a,b),t=<span class="built_in">getnum</span>(c,d);</span><br><span class="line">		<span class="keyword">if</span>(bl[z]==bl[t]) <span class="keyword">continue</span>;</span><br><span class="line">		st[bl[z]]=<span class="number">1</span>,st[bl[t]]=<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">if</span>(!mp[bl[z]]) mp[bl[z]]=++cnt;</span><br><span class="line">		<span class="keyword">if</span>(!mp[bl[t]]) mp[bl[t]]=++cnt;</span><br><span class="line">		g[mp[bl[z]]][mp[bl[t]]]=<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">floyd</span>(cnt);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=q;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		a=<span class="built_in">read</span>(),b=<span class="built_in">read</span>(),c=<span class="built_in">read</span>(),d=<span class="built_in">read</span>();</span><br><span class="line">		z=<span class="built_in">getnum</span>(a,b),t=<span class="built_in">getnum</span>(c,d);</span><br><span class="line">		<span class="keyword">if</span>(bl[z]==bl[t]) cout&lt;&lt;<span class="number">1</span>&lt;&lt;endl;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(st[bl[z]]==<span class="number">0</span>||st[bl[t]]==<span class="number">0</span>) cout&lt;&lt;<span class="number">0</span>&lt;&lt;endl;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(st[bl[z]]&amp;&amp;st[bl[t]])</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(g[mp[bl[z]]][mp[bl[t]]]) cout&lt;&lt;<span class="number">1</span>&lt;&lt;endl;</span><br><span class="line">			<span class="keyword">else</span> cout&lt;&lt;<span class="number">0</span>&lt;&lt;endl;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="T3序列"><a href="#T3序列" class="headerlink" title="T3序列"></a>T3序列</h1><h2 id="题意-2"><a href="#题意-2" class="headerlink" title="题意"></a>题意</h2><p>有 $n$ 个一元组 $(a,b)$,定义 $f(i,j)</p>
]]></content>
      <categories>
        <category>contest</category>
      </categories>
      <tags>
        <tag>test</tag>
      </tags>
  </entry>
  <entry>
    <title>test2023/12/11</title>
    <url>/contest/test2023-12-11/</url>
    <content><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>$yxz$ 和 $cyq$ 都回家了，只有我和 $gwx$ 做了，直接摆大烂</p>
<span id="more"></span>
<h1 id="T1"><a href="#T1" class="headerlink" title="T1"></a>T1</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给定一对正整数 $a,b$ 以及一个长度为 $n$ 的正整数数组 $x$，其中第 $i$ 个数为 $x_i$，现在有两种选择：</p>
<p>$1.$ $a&#x3D;a-1$</p>
<p>$2.$ 选取一个 $i\in[1,n]$，$a&#x3D;a-a-{\bmod}$ $x_i$</p>
<p>问要使 $a$ 变成 $b$ 至少需要多少次操作。</p>
<h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>第一行一个整数 $n$。</p>
<p>第二行 $n$ 个正整数 $x_i$。</p>
<p>第三行两个整数 $a$，$b$。</p>
<h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>一个整数，表示将 $a$ 变成 $b$ 的最少操作次数。</p>
<h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>显然每一次 $a$ 所减的越多，方案越优，$t(x)$ 表示 $x$ 最多能减多少，$x\in[b+1,a]$。</p>
<p>考虑预处理，对于每一个 $x_i$，$i\in[1,n]$ 的最大贡献是 $x_i-1$，找到 $\bmod$ $x_i$ 为 $x_i-1$ 的数，把 $t$ 赋为 $x_i-1$。（注意，要先将 $x$ 数组去重，且要单独把 $t[a-b]$ 处理出来）</p>
<p>再考虑其他的位置，从后向前处理，$t[i]&#x3D;\max(t[i],t[i+1])$。</p>
<p>预处理的复杂度为 $\Theta((a-b)\log n)$。</p>
<p>最后暴力跳即可，复杂度为 $\Theta (n)$。</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e6</span>+<span class="number">10</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line">	<span class="type">char</span> c=<span class="built_in">getchar</span>();</span><br><span class="line">	<span class="keyword">while</span>(!<span class="built_in">isdigit</span>(c)) c=<span class="built_in">getchar</span>();</span><br><span class="line">	<span class="keyword">while</span>(<span class="built_in">isdigit</span>(c)) res=(res&lt;&lt;<span class="number">1</span>)+(res&lt;&lt;<span class="number">3</span>)+c-<span class="string">&#x27;0&#x27;</span>,c=<span class="built_in">getchar</span>();</span><br><span class="line">	<span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> a,b,n,s[N],k[N],cnt,t[N],ans;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">freopen</span>(<span class="string">&quot;meet.in&quot;</span>,<span class="string">&quot;r&quot;</span>,stdin);</span><br><span class="line">	<span class="built_in">freopen</span>(<span class="string">&quot;meet.out&quot;</span>,<span class="string">&quot;w&quot;</span>,stdout);</span><br><span class="line">	n=<span class="built_in">read</span>();</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) k[i]=<span class="built_in">read</span>();</span><br><span class="line">	a=<span class="built_in">read</span>(),b=<span class="built_in">read</span>();</span><br><span class="line">	<span class="built_in">sort</span>(k+<span class="number">1</span>,k+<span class="number">1</span>+n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="keyword">if</span>(k[i]!=k[i<span class="number">-1</span>]) s[++cnt]=k[i];</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=a-b;i++) t[i]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=cnt;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> z=((b+<span class="number">1</span>)/s[i]+<span class="number">1</span>)*s[i]<span class="number">-1</span>;</span><br><span class="line">		<span class="keyword">for</span>(;z&lt;=a;z+=s[i]) <span class="keyword">if</span>((z-s[i]+<span class="number">1</span>)&gt;=b) t[z-b]=s[i]<span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=cnt;i++) <span class="keyword">if</span>((a-a%s[i])&gt;b) t[a-b]=<span class="built_in">max</span>(t[a-b],a%s[i]);</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=a-b;i&gt;=<span class="number">1</span>;i--) t[i]=<span class="built_in">max</span>(t[i],t[i+<span class="number">1</span>]<span class="number">-1</span>);</span><br><span class="line">	<span class="keyword">while</span>(a&gt;b) a-=t[a-b],ans++;</span><br><span class="line">	cout&lt;&lt;ans;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>contest</category>
      </categories>
      <tags>
        <tag>test</tag>
      </tags>
  </entry>
</search>
